# ansible-playbook -i "`hostname`," playbook_install.yaml -K
---
- name: Install cd auto ripper
  hosts: all
  become: true

  tasks:

    - name: Install apt dependencies
      ansible.builtin.apt:
        name:
          - abcde
          - lame
          - eyed3
          - glyrc
          - imagemagick
          - cdparanoia
          - flac
          - apache2-utils
        state: present

    - name: Ensure output dir exists
      ansible.builtin.file:
        path: /home/nbaron/music_rips
        state: directory
        mode: '0755'

    - name: Ensure local config dir exists
      ansible.builtin.file:
        path: /var/local/cd-ripper
        state: directory
        mode: '0755'

    - name: Ensure log dir exists
      ansible.builtin.file:
        path: /var/log/cd-ripper
        state: directory
        mode: '0755'

    - name: Put abcde config file in place.
      ansible.builtin.copy:
        src: .abcde.conf
        dest: /var/local/cd-ripper/.abcde.conf
        mode: '0755'

    - name: Copy ripper service script in place
      ansible.builtin.copy:
        src: cd-rip
        dest: /bin/cd-rip
        mode: 'u+rx'

    - name: Put system.d service file in place
      ansible.builtin.copy:
        src: cd-ripper.service
        dest: /etc/systemd/system/cd-ripper.service
        mode: '0755'

    - name: Put cd ripper udev rule in place
      become: true
      ansible.builtin.copy:
        src: 99-cd-ripper.rules
        dest: /etc/udev/rules.d/99-cd-ripper.rules
        mode: '0755'
      notify: Reload udev rules

  handlers:
    - name: Reload udev rules
      ansible.builtin.command: udevadm control --reload
      register: udev_command_results
      changed_when: udev_command_results.rc == 0
